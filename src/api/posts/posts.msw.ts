/**
 * Generated by orval v6.20.0 🍺
 * Do not edit manually.
 * JSON Placeholder API
 * See https://jsonplaceholder.typicode.com/
 * OpenAPI spec version: 1.0.0
 */
import { faker } from "@faker-js/faker";
import { HttpResponse, delay, http } from "msw";

export const getGetPostsMock = () =>
  Array.from(
    { length: faker.number.int({ min: 1, max: 10 }) },
    (_, i) => i + 1
  ).map(() => ({
    completed: faker.word.sample(),
    id: faker.number.int({ min: undefined, max: undefined }),
    title: faker.word.sample(),
    userId: faker.number.int({ min: undefined, max: undefined }),
  }));

export const getGetPostMock = () => ({
  completed: faker.word.sample(),
  id: faker.number.int({ min: undefined, max: undefined }),
  title: faker.word.sample(),
  userId: faker.number.int({ min: undefined, max: undefined }),
});

export const getPostsMSW = () => [
  http.get("*/posts", async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetPostsMock()), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
      },
    });
  }),
  http.get("*/posts/:id", async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetPostMock()), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
      },
    });
  }),
];
